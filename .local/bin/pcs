#!/usr/bin/env python3

import argparse
import configparser
import getpass
import os
import re
import sys
from pathlib import Path


# Parse command line arguments
parser = argparse.ArgumentParser(description="Save AWS creds from PCSK")
parser.add_argument("--profile", default="default", help="AWS profile")
parser.add_argument("--backup-suffix", default="-backup", help="Backup suffix")
args = parser.parse_args()

# Resolve AWS shared credentials file and desired profile
filename = os.getenv("AWS_SHARED_CREDENTIALS_FILE", f"{Path.home()}/.aws/credentials")
profile = args.profile
backup_suffix = args.backup_suffix

# Read existing credentials in the file
config = configparser.ConfigParser()
config.read(filename)

# Save any existing creds that would be overwritten
if profile in config:
    config[f"{profile}{backup_suffix}"] = config[profile]

# Get input from user
try:
    raw = getpass.getpass(prompt='Paste PCSK "Export" data (will not be displayed): ')
except KeyboardInterrupt:
    sys.exit(130)

# Parse user input containing the creds
# Should be of the form ' export AWS_ACCESS_KEY_ID=... AWS_SECRET_ACCESS_KEY=... AWS_SESSION_TOKEN=...'
pat = ".*AWS_ACCESS_KEY_ID=(.*) AWS_SECRET_ACCESS_KEY=(.*) AWS_SESSION_TOKEN=(.*)"
m = re.search(pat, raw)
if m is not None:
    config[profile] = {
        "aws_access_key_id": m.group(1),
        "aws_secret_access_key": m.group(2),
        "aws_session_token": m.group(3),
    }
else:
    sys.exit("input did not match expected pattern")

# Write updated credentials to file
with open(filename, "w") as f:
    config.write(f)
print(f'Wrote profile "{profile}" in file "{filename}"', file=sys.stderr)
